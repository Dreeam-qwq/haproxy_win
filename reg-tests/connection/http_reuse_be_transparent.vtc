varnishtest "Test the proper interaction between http-reuse and backend in transparent mode"
feature cmd "$HAPROXY_PROGRAM -cc 'feature(TPROXY)'"

# If backend is used with the transparent mode, the connection are considered
# as private and should only be reused for requests of the same session.
# This is similar to the http-reuse never mode

#REQUIRE_VERSION=2.4

feature ignore_unknown_macro

haproxy h1 -conf {
	defaults
		timeout client 30s
		timeout server 30s
		timeout connect 30s
		mode http

	listen sender
		bind "fd@${feS}"
		option transparent

		http-request set-dst hdr(dst)
		http-request set-dst-port hdr(dst-port)

		http-after-response set-header http_reuse %[bc_reused]

	listen srv1
		bind "fd@${fes1}"
		http-request add-header srv-id s1
		http-request return status 200 hdr srv-id s1

	listen srv2
		bind "fd@${fes2}"
		http-request add-header srv-id s2
		http-request return status 200 hdr srv-id s2
} -start

client c1 -connect ${h1_feS_sock} {
	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "0"
	expect resp.http.srv-id == "s1"

	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "1"
	expect resp.http.srv-id == "s1"

	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "1"
	expect resp.http.srv-id == "s1"
} -run

client c2 -connect ${h1_feS_sock} {
	txreq \
	  -hdr "dst: ${h1_fes2_addr}" \
	  -hdr "dst-port: ${h1_fes2_port}"
	rxresp
	expect resp.http.http_reuse == "0"
	expect resp.http.srv-id == "s2"

	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "0"
	expect resp.http.srv-id == "s1"

	txreq \
	  -hdr "dst: ${h1_fes2_addr}" \
	  -hdr "dst-port: ${h1_fes2_port}"
	rxresp
	expect resp.http.http_reuse == "1"
	expect resp.http.srv-id == "s2"
} -run

client c3 -connect ${h1_feS_sock} {
	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "0"
	expect resp.http.srv-id == "s1"

	txreq \
	  -hdr "dst: ${h1_fes1_addr}" \
	  -hdr "dst-port: ${h1_fes1_port}"
	rxresp
	expect resp.http.http_reuse == "1"
	expect resp.http.srv-id == "s1"

	txreq \
	  -hdr "dst: ${h1_fes2_addr}" \
	  -hdr "dst-port: ${h1_fes2_port}"
	rxresp
	expect resp.http.http_reuse == "0"
	expect resp.http.srv-id == "s2"
} -run
